{
    "swagger": "2.0",
    "info": {
        "title": "Laravel Generator APIs",
        "version": "1.0.0"
    },
    "basePath": "/CaristoCratApp/api/v1",
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Register a new user.",
                "description": "Register User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Register"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Register"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Login a user.",
                "description": "Login User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Login"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/me": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "user profile.",
                "description": "user profile.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "description": "Get the authenticated User.",
                                    "type": "boolean"
                                },
                                "message": {
                                    "description": "Get the authenticated User.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "refresh auth token.",
                "description": "refresh auth token.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "description": "Refresh a token.",
                                    "type": "boolean"
                                },
                                "message": {
                                    "description": "Refresh a token.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "logout user.",
                "description": "logout user.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "description": "Log the user out (Invalidate the token).",
                                    "type": "boolean"
                                },
                                "message": {
                                    "description": "Log the user out (Invalidate the token).",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/forget-password": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Forget password request.",
                "description": "Register User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User email",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/verify-reset-code": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "verify forget password request code.",
                "description": "verify code",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "verification_code",
                        "in": "query",
                        "description": "verification code",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Reset password.",
                "description": "Reset password.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "user email ",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "verification_code",
                        "in": "query",
                        "description": "verification code",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "new password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "description": "confirm password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/social-login": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Login With Social Account.",
                "description": "Login With Social Account.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Login With Social Account.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SocialAccounts"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/SocialAccounts"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/change-password": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Reset password.",
                "description": "Reset password.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "old_password",
                        "in": "formData",
                        "description": "old password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "description": "new password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password_confirmation",
                        "in": "formData",
                        "description": "confirm password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/update-profile": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Reset password.",
                "description": "Reset password.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Full Name of User",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "country_code",
                        "in": "formData",
                        "description": "Country Code of User's Phone (like 966, 971)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "phone",
                        "in": "formData",
                        "description": "Phone Number of User's Phone",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "about",
                        "in": "formData",
                        "description": "About Me/Bio of User ",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "image",
                        "in": "formData",
                        "description": "Image File of the user",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/favorite-news": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Get a listing of the favorite news.",
                "description": "Get a listing of the favorite news",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "description": "Response Language",
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID if you need favorites for specific category",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/News"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/carAttributes": {
            "get": {
                "tags": [
                    "CarAttribute"
                ],
                "summary": "Get a listing of the CarAttributes.",
                "description": "Get all CarAttributes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "description": "Change the locale.",
                        "required": false,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CarAttribute"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/carBrands": {
            "get": {
                "tags": [
                    "CarBrand"
                ],
                "summary": "Get a listing of the CarBrands.",
                "description": "Get all CarBrands",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "description": "Change the locale.",
                        "required": false,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CarBrand"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/carFeatures": {
            "get": {
                "tags": [
                    "CarFeature"
                ],
                "summary": "Get a listing of the CarFeatures.",
                "description": "Get all CarFeatures",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "description": "Change the locale.",
                        "required": false,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CarFeature"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/carModels": {
            "get": {
                "tags": [
                    "CarModel"
                ],
                "summary": "Get a listing of the CarModels.",
                "description": "Get all CarModels",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "description": "Change the locale.",
                        "required": false,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "Get brand's models.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CarModel"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/carTypes": {
            "get": {
                "tags": [
                    "CarType"
                ],
                "summary": "Get a listing of the CarTypes.",
                "description": "Get all CarTypes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "description": "Change the locale.",
                        "required": false,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CarType"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a listing of the Categories.",
                "description": "Get all Categories",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "description": "Response Language",
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "asda sd",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Store a newly created Category in storage",
                "description": "Store Category",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "Token",
                        "required": true,
                        "type": "string",
                        "default": "Bearer abc"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Category that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Category"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Display the specified Category",
                "description": "Get Category",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Category",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Category"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update the specified Category in storage",
                "description": "Update Category",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Category",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Category that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Category"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Remove the specified Category from storage",
                "description": "Delete Category",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Category",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/comments": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get a listing of the Comments.",
                "description": "Get all Comments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "news_id",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Store a newly created Comment in storage",
                "description": "Store Comment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Comment that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Comment"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Display the specified Comment",
                "description": "Get Comment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Comment",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Comment"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update the specified Comment in storage",
                "description": "Update Comment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Comment",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Comment that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Comment"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Remove the specified Comment from storage",
                "description": "Delete Comment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Comment",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/contactus": {
            "post": {
                "tags": [
                    "ContactUs"
                ],
                "summary": "Store a newly created ContactUs in storage",
                "description": "Store ContactUs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "ContactUs that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContactUs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/ContactUs"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/engineTypes": {
            "get": {
                "tags": [
                    "EngineType"
                ],
                "summary": "Get a listing of the EngineTypes.",
                "description": "Get all EngineTypes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "description": "Change the locale.",
                        "required": false,
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EngineType"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/languages": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get a listing of the Languages.",
                "description": "Get all Languages",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Language"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/myCars": {
            "get": {
                "tags": [
                    "MyCar"
                ],
                "summary": "Get a listing of the MyCars.",
                "description": "Get all MyCars",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MyCar"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "MyCar"
                ],
                "summary": "Store a newly created MyCar in storage",
                "description": "Store MyCar",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "MyCar that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MyCar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MyCar"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/myCars/{id}": {
            "get": {
                "tags": [
                    "MyCar"
                ],
                "summary": "Display the specified MyCar",
                "description": "Get MyCar",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MyCar",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MyCar"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MyCar"
                ],
                "summary": "Update the specified MyCar in storage",
                "description": "Update MyCar",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MyCar",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "MyCar that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MyCar"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/MyCar"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MyCar"
                ],
                "summary": "Remove the specified MyCar from storage",
                "description": "Delete MyCar",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of MyCar",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/news": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get a listing of the News.",
                "description": "Get all News",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "description": "Response Language",
                        "type": "string",
                        "default": "en"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/News"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "News"
                ],
                "summary": "Store a newly created News in storage",
                "description": "Store News",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "News that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/News"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/news/{id}": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Display the specified News",
                "description": "Get News",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of News",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/News"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "News"
                ],
                "summary": "Update the specified News in storage",
                "description": "Update News",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of News",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "News that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/News"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "News"
                ],
                "summary": "Remove the specified News from storage",
                "description": "Delete News",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of News",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/newsInteractions": {
            "get": {
                "tags": [
                    "NewsInteraction"
                ],
                "summary": "Get a listing of the NewsInteractions.",
                "description": "Get all NewsInteractions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NewsInteraction"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "NewsInteraction"
                ],
                "summary": "Store a newly created NewsInteraction in storage",
                "description": "Store NewsInteraction",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "NewsInteraction that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewsInteraction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/NewsInteraction"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/newsInteractions/{id}": {
            "get": {
                "tags": [
                    "NewsInteraction"
                ],
                "summary": "Display the specified NewsInteraction",
                "description": "Get NewsInteraction",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of NewsInteraction",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/NewsInteraction"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "NewsInteraction"
                ],
                "summary": "Update the specified NewsInteraction in storage",
                "description": "Update NewsInteraction",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of NewsInteraction",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "NewsInteraction that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NewsInteraction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/NewsInteraction"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "NewsInteraction"
                ],
                "summary": "Remove the specified NewsInteraction from storage",
                "description": "Delete NewsInteraction",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of NewsInteraction",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Get a listing of the Notifications.",
                "description": "Get all Notifications",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Notification"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Store a newly created Notification in storage",
                "description": "Store Notification",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Notification that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Notification"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/notifications/{id}": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Display the specified Notification",
                "description": "Get Notification",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Notification",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Notification"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Notification"
                ],
                "summary": "Update the specified Notification in storage",
                "description": "Update Notification",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Notification",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Notification that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Notification"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Notification"
                ],
                "summary": "Remove the specified Notification from storage",
                "description": "Delete Notification",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Notification",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/pages": {
            "get": {
                "tags": [
                    "Page"
                ],
                "summary": "Get a listing of the Pages.",
                "description": "Get all Pages",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Page"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Page"
                ],
                "summary": "Store a newly created Page in storage",
                "description": "Store Page",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Page that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Page"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/pages/{id}": {
            "get": {
                "tags": [
                    "Page"
                ],
                "summary": "Display the specified Page",
                "description": "Get Page",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Page",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Page"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Page"
                ],
                "summary": "Update the specified Page in storage",
                "description": "Update Page",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Page",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Page that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Page"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Page"
                ],
                "summary": "Remove the specified Page from storage",
                "description": "Delete Page",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Page",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/regions": {
            "get": {
                "tags": [
                    "Region"
                ],
                "summary": "Get a listing of the Regions.",
                "description": "Get all Regions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Region"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/regionalSpecifications": {
            "get": {
                "tags": [
                    "RegionalSpecification"
                ],
                "summary": "Get a listing of the RegionalSpecifications.",
                "description": "Get all RegionalSpecifications",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RegionalSpecification"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a listing of the Users.",
                "description": "Get all Users",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store a newly created Customer in storage",
                "description": "Store User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Display the specified User",
                "description": "Get User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the specified User in storage",
                "description": "Update User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove the specified User from storage",
                "description": "Delete User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users-regions": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store a newly created Customer in storage",
                "description": "Store User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": true,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "region",
                        "in": "body",
                        "description": "Add user region.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserRegions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/walkThroughs": {
            "get": {
                "tags": [
                    "WalkThrough"
                ],
                "summary": "Get a listing of the WalkThroughs.",
                "description": "Get all WalkThroughs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": false,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Change the Default Record Count. If not found, Returns All Records in DB.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Change the Default Offset of the Query. If not found, 0 will be used.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WalkThrough"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/walkThroughs/{id}": {
            "get": {
                "tags": [
                    "WalkThrough"
                ],
                "summary": "Display the specified WalkThrough",
                "description": "Get WalkThrough",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "User Auth Token{ Bearer ABC123 }",
                        "required": false,
                        "type": "string",
                        "default": "Bearer ABC123"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of WalkThrough",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/WalkThrough"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CarAttribute": {
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                }
            }
        },
        "CarBrand": {
            "required": [
                "created_at"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CarFeature": {
            "required": [
                "id",
                "updated_at"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CarModel": {
            "required": [
                "brand_id",
                "created_at"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "brand_id": {
                    "description": "brand_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CarType": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Category": {
            "required": [
                "slug"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "slug": {
                    "description": "slug",
                    "type": "string"
                },
                "user_id": {
                    "description": "user_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Comment": {
            "required": [
                "news_id",
                "comment_text"
            ],
            "properties": {
                "parent_id": {
                    "description": "parent_id",
                    "type": "integer",
                    "format": "int32"
                },
                "news_id": {
                    "description": "news_id",
                    "type": "integer",
                    "format": "int32"
                },
                "comment_text": {
                    "description": "comment_text",
                    "type": "string"
                }
            }
        },
        "ContactUs": {
            "required": [
                "name",
                "email",
                "subject",
                "message"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "subject": {
                    "description": "subject",
                    "type": "string"
                },
                "message": {
                    "description": "message",
                    "type": "string"
                }
            }
        },
        "EngineType": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Language": {
            "required": [
                "code",
                "title",
                "native_name",
                "direction",
                "status"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "title": {
                    "description": "title",
                    "type": "string"
                },
                "native_name": {
                    "description": "native_name",
                    "type": "string"
                },
                "direction": {
                    "description": "direction",
                    "type": "string"
                },
                "status": {
                    "description": "status",
                    "type": "boolean"
                }
            }
        },
        "Login": {
            "required": [
                "email",
                "password",
                "device_type",
                "device_token"
            ],
            "properties": {
                "email": {
                    "description": "User Email",
                    "type": "string"
                },
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "device_type": {
                    "description": "device_type",
                    "type": "string"
                },
                "device_token": {
                    "description": "device_token",
                    "type": "string"
                }
            }
        },
        "Media": {
            "required": [
                "id",
                "instance_id",
                "instance_type",
                "title",
                "filename",
                "created_at"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "instance_id": {
                    "description": "instance_id",
                    "type": "integer",
                    "format": "int32"
                },
                "instance_type": {
                    "description": "instance_type",
                    "type": "string"
                },
                "title": {
                    "description": "title",
                    "type": "string"
                },
                "filename": {
                    "description": "filename",
                    "type": "string"
                }
            }
        },
        "Menu": {
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "icon": {
                    "description": "icon",
                    "type": "string"
                },
                "slug": {
                    "description": "slug",
                    "type": "string"
                },
                "position": {
                    "description": "position",
                    "type": "boolean"
                },
                "is_protected": {
                    "description": "is_protected",
                    "type": "boolean"
                },
                "status": {
                    "description": "status",
                    "type": "boolean"
                }
            }
        },
        "MyCarAttributes": {
            "properties": {
                "KEY": {
                    "description": "KEY",
                    "type": "string",
                    "default": "VALUE"
                }
            }
        },
        "MyCar": {
            "required": [
                "type_id",
                "model_id",
                "engine_type_id",
                "year",
                "transmission_type",
                "name",
                "email",
                "country_code",
                "phone"
            ],
            "properties": {
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "country_code": {
                    "description": "country_code",
                    "type": "string"
                },
                "phone": {
                    "description": "phone",
                    "type": "integer",
                    "format": "int32"
                },
                "type_id": {
                    "description": "Car Type Id",
                    "type": "integer",
                    "format": "int32"
                },
                "chassis": {
                    "description": "Car chassis number",
                    "type": "string",
                    "format": "int32"
                },
                "model_id": {
                    "description": "Car Model Id",
                    "type": "integer",
                    "format": "int32"
                },
                "engine_type_id": {
                    "description": "Car Engine Type Id",
                    "type": "integer",
                    "format": "int32"
                },
                "year": {
                    "description": "car Model's year",
                    "type": "string",
                    "format": "date"
                },
                "transmission_type": {
                    "description": "transmission_type: 10:Manual, 20:Automatic",
                    "type": "integer",
                    "format": "int32"
                },
                "regional_specification_id": {
                    "description": "regional specification id",
                    "type": "integer",
                    "format": "int32"
                },
                "car_attributes": {
                    "description": "attributes id - CSV [1,2,3]",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MyCarAttributes"
                    }
                },
                "car_features": {
                    "description": "Features id",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "media": {
                    "description": "attach car media here",
                    "type": "array",
                    "items": {
                        "type": "file"
                    }
                },
                "notes": {
                    "description": "add if any extra notes",
                    "type": "string"
                }
            }
        },
        "News": {
            "required": [
                "id",
                "category_id",
                "is_featured"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "category_id": {
                    "description": "category_id",
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "description": "user_id",
                    "type": "integer",
                    "format": "int32"
                },
                "views_count": {
                    "description": "views_count",
                    "type": "integer",
                    "format": "int32"
                },
                "favorite_count": {
                    "description": "favorite_count",
                    "type": "integer",
                    "format": "int32"
                },
                "like_count": {
                    "description": "like_count",
                    "type": "integer",
                    "format": "int32"
                },
                "comments_count": {
                    "description": "comments_count",
                    "type": "integer",
                    "format": "int32"
                },
                "is_featured": {
                    "description": "is_featured",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "NewsInteraction": {
            "required": [
                "news_id",
                "type"
            ],
            "properties": {
                "news_id": {
                    "description": "news_id",
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "description": "type, 10=View, 20=like, 30=favorite",
                    "type": "integer"
                }
            }
        },
        "Notification": {
            "required": [
                "sender_id",
                "url",
                "action_type",
                "ref_id",
                "message",
                "status"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "sender_id": {
                    "description": "sender_id",
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "description": "url",
                    "type": "string"
                },
                "action_type": {
                    "description": "action_type",
                    "type": "string"
                },
                "ref_id": {
                    "description": "ref_id",
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "description": "message",
                    "type": "string"
                },
                "status": {
                    "description": "status",
                    "type": "boolean"
                }
            }
        },
        "Page": {
            "required": [
                "slug",
                "status"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "slug": {
                    "description": "slug",
                    "type": "string"
                },
                "status": {
                    "description": "status",
                    "type": "boolean"
                }
            }
        },
        "Permission": {
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Region": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                }
            }
        },
        "RegionalSpecification": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Register": {
            "required": [
                "name",
                "email",
                "address",
                "image",
                "password",
                "password_confirmation"
            ],
            "properties": {
                "name": {
                    "description": "User First Name",
                    "type": "string"
                },
                "address": {
                    "description": "User address",
                    "type": "string"
                },
                "country_code": {
                    "description": "User Country code for phone",
                    "type": "string"
                },
                "phone": {
                    "description": "User Phone Name",
                    "type": "string"
                },
                "image": {
                    "description": "User Image",
                    "type": "string"
                },
                "email": {
                    "description": "User Email",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "password_confirmation": {
                    "description": "Password Confirmation",
                    "type": "string"
                },
                "device_token": {
                    "description": "Device Token",
                    "type": "string"
                },
                "device_type": {
                    "description": "Device Type",
                    "type": "string"
                }
            }
        },
        "Role": {
            "required": [
                "name",
                "description"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SocialAccounts": {
            "required": [
                "platform",
                "client_id"
            ],
            "properties": {
                "platform": {
                    "description": "platform",
                    "type": "string"
                },
                "client_id": {
                    "description": "client_id",
                    "type": "string"
                },
                "token": {
                    "description": "token",
                    "type": "string"
                },
                "username": {
                    "description": "username",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "image": {
                    "description": "image",
                    "type": "string"
                },
                "device_token": {
                    "description": "User Device Token",
                    "type": "string"
                },
                "device_type": {
                    "description": "User Device Type",
                    "type": "string"
                },
                "expires_at": {
                    "description": "expires_at",
                    "type": "string"
                }
            }
        },
        "UserRegions": {
            "required": [
                "region_id"
            ],
            "properties": {
                "region_id": {
                    "description": "Region id",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "User": {
            "required": [
                "name",
                "email",
                "password"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "WalkThrough": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "sort": {
                    "description": "sort",
                    "type": "integer",
                    "format": "int32"
                }
            }
        }
    }
}